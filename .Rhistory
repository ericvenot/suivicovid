run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Etude du taux de croissance
#############################
covid100<-covid %>%
arrange(pays,date) %>%
group_by(codepays,pays) %>%
mutate(cumul=cumsum(deaths)) %>%
select(codepays,pays,date,cumul,deaths) %>%
arrange(codepays,pays,date) %>%
mutate(jour=dplyr::row_number(),
prec=dplyr::lag(cumul,order_by=pays)) %>%
mutate(taux=deaths/cumul*100) %>%
filter(cumul>=1000)
chemin_url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide-",format(Sys.Date()-1, "%Y-%m-%d"), ".xlsx", sep = "")
#download the dataset from the website to a local temporary file
GET(chemin_url, authenticate(":", ":", type="ntlm"), write_disk(tf <- tempfile(fileext = ".xlsx")))
covid1 <- read_excel(tf,sheet = 1)
covid <- covid1 %>%
rename(codepays=countryterritoryCode,pays=countriesAndTerritories, date=dateRep) %>%
select(codepays,pays,date,deaths)
covid %>%
filter(!is.na(codepays)) %>%
group_by(codepays,pays) %>%
summarise(total_deces=sum(deaths)) %>%
ungroup()
# Etude du taux de croissance
#############################
covid100<-covid %>%
arrange(pays,date) %>%
group_by(codepays,pays) %>%
mutate(cumul=cumsum(deaths)) %>%
select(codepays,pays,date,cumul,deaths) %>%
arrange(codepays,pays,date) %>%
mutate(jour=dplyr::row_number(),
prec=dplyr::lag(cumul,order_by=pays)) %>%
mutate(taux=deaths/cumul*100) %>%
filter(cumul>=1000)
View(covid100)
# 2 pays avec les pires taux de croissance hier
covid100 %>%
group_by(pays) %>%
filter(date=max(date))
# 2 pays avec les pires taux de croissance hier
covid100 %>%
group_by(pays) %>%
filter(date==max(date))
# 2 pays avec les pires taux de croissance hier
covid100 %>%
group_by(pays) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(taux) %>%
top_n(2)
# 2 pays avec les pires taux de croissance hier
covid100 %>%
group_by(pays) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(taux) %>%
dplyr::top_n(2)
# 2 pays avec les pires taux de croissance hier
covid100 %>%
group_by(pays) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(taux) %>%
dplyr::top_n(2) %>%
arrange(taux)
# 2 pays avec les pires taux de croissance hier
covid100 %>%
group_by(pays) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(taux)
# 2 pays avec les pires taux de croissance hier
covid100 %>%
group_by(pays) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux))
# 2 pays avec les pires taux de croissance hier
covid100 %>%
group_by(pays) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux)) %>%
dplyr::top_n(2)
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# 2 pays avec les pires taux de croissance hier
covid100 %>%
group_by(pays) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux)) %>%
dplyr::top_n(2) %>%
arrange(taux) %>%
dplyr::top_n(1)
# 2 pays avec les pires taux de croissance hier
covid100 %>%
group_by(pays) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux)) %>%
dplyr::top_n(2)
# 2 pays avec les pires taux de croissance hier
covid100 %>%
group_by(pays) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux)) %>%
dplyr::top_n(2) %>%
dplyr::last(1)
# 2 pays avec les pires taux de croissance hier
covid100 %>%
group_by(pays) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux)) %>%
dplyr::top_n(2) %>%
dplyr::top_n(-1)
# 2 pays avec les pires taux de croissance hier
covid100 %>%
group_by(pays) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux)) %>%
dplyr::top_n(2)
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
library(httr)
library(tidyverse)
library(readxl)
library(lubridate)
library(plotly)
chemin_url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide-",format(Sys.Date()-1, "%Y-%m-%d"), ".xlsx", sep = "")
#download the dataset from the website to a local temporary file
GET(chemin_url, authenticate(":", ":", type="ntlm"), write_disk(tf <- tempfile(fileext = ".xlsx")))
covid1 <- read_excel(tf,sheet = 1)
covid <- covid1 %>%
rename(codepays=countryterritoryCode,pays=countriesAndTerritories, date=dateRep) %>%
select(codepays,pays,date,deaths)
covid %>%
filter(!is.na(codepays)) %>%
group_by(codepays,pays) %>%
summarise(total_deces=sum(deaths)) %>%
ungroup()
# Etude du taux de croissance
#############################
covid100<-covid %>%
arrange(pays,date) %>%
group_by(codepays,pays) %>%
mutate(cumul=cumsum(deaths)) %>%
select(codepays,pays,date,cumul,deaths) %>%
arrange(codepays,pays,date) %>%
mutate(jour=dplyr::row_number(),
prec=dplyr::lag(cumul,order_by=pays)) %>%
mutate(taux=deaths/cumul*100) %>%
filter(cumul>=1000)
# 2 pays avec les pires taux de croissance hier
covid100 %>%
group_by(pays) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux)) %>%
dplyr::top_n(2)
# 2 pays avec les pires taux de croissance hier
covid100 %>%
group_by(pays) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux)) %>%
dplyr::top_n(2) %>%
dplyr::top_n(-1)
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# 2 pays avec les pires taux de croissance hier
covid %>%
arrange(pays,date) %>%
group_by(pays) %>%
mutate(cumul=cumsum(deaths)) %>%
select(codepays,pays,date,cumul,deaths) %>%
arrange(codepays,pays,date) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux)) %>%
dplyr::top_n(2) %>%
dplyr::top_n(-1)
# 2 pays avec les pires taux de croissance hier
covid %>%
arrange(pays,date) %>%
group_by(pays) %>%
mutate(cumul=cumsum(deaths)) %>%
select(codepays,pays,date,cumul,deaths) %>%
mutate(taux=deaths/cumul*100) %>%
arrange(codepays,pays,date) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux)) %>%
dplyr::top_n(2) %>%
dplyr::top_n(-1)
# 2 pays avec les pires taux de croissance hier
covid %>%
arrange(pays,date) %>%
filter(!is.na(codepays)) %>%
group_by(pays) %>%
mutate(cumul=cumsum(deaths)) %>%
select(codepays,pays,date,cumul,deaths) %>%
mutate(taux=deaths/cumul*100) %>%
arrange(codepays,pays,date) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux)) %>%
dplyr::top_n(2) %>%
dplyr::top_n(-1)
# 2 pays avec les pires taux de croissance hier
taux <-covid %>%
arrange(pays,date) %>%
filter(!is.na(codepays)) %>%
group_by(pays) %>%
mutate(cumul=cumsum(deaths)) %>%
select(codepays,pays,date,cumul,deaths) %>%
mutate(taux=deaths/cumul*100) %>%
arrange(codepays,pays,date) %>%
filter(date==max(date)) %>%
ungroup()
View(taux)
# 2 pays avec les pires taux de croissance hier
taux <-covid %>%
arrange(pays,date) %>%
filter(!is.na(codepays)) %>%
group_by(pays) %>%
mutate(cumul=cumsum(deaths)) %>%
select(codepays,pays,date,cumul,deaths) %>%
mutate(taux=deaths/cumul*100) %>%
arrange(codepays,pays,date) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux))
# 2 pays avec les pires taux de croissance hier
taux <-covid %>%
arrange(pays,date) %>%
filter(!is.na(codepays)) %>%
group_by(pays) %>%
mutate(cumul=cumsum(deaths)) %>%
select(codepays,pays,date,cumul,deaths) %>%
mutate(taux=deaths/cumul*100) %>%
arrange(codepays,pays,date) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux))%>%
dplyr::top_n(2) %>%
dplyr::top_n(-1)
# 2 pays avec les pires taux de croissance hier
covid %>%
arrange(pays,date) %>%
filter(!is.na(codepays)) %>%
group_by(pays) %>%
mutate(cumul=cumsum(deaths)) %>%
select(codepays,pays,date,cumul,deaths) %>%
mutate(taux=deaths/cumul*100) %>%
arrange(codepays,pays,date) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux))%>%
dplyr::top_n(2) %>%
dplyr::top_n(-1)
# 2 pays avec les pires taux de croissance hier
covid %>%
arrange(pays,date) %>%
filter(!is.na(codepays)) %>%
group_by(pays) %>%
mutate(cumul=cumsum(deaths)) %>%
select(codepays,pays,date,cumul,deaths) %>%
mutate(taux=deaths/cumul*100) %>%
arrange(codepays,pays,date) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux))
# 2 pays avec les pires taux de croissance hier
covid %>%
arrange(pays,date) %>%
filter(!is.na(codepays)) %>%
group_by(pays) %>%
mutate(cumul=cumsum(deaths)) %>%
select(codepays,pays,date,cumul,deaths) %>%
mutate(taux=deaths/cumul*100) %>%
arrange(codepays,pays,date) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux)) %>%
dplyr::top_n(2)
# 2 pays avec les pires taux de croissance hier
covid %>%
arrange(pays,date) %>%
filter(!is.na(codepays)) %>%
group_by(pays) %>%
mutate(cumul=cumsum(deaths)) %>%
select(codepays,pays,date,cumul,deaths) %>%
mutate(taux=deaths/cumul*100) %>%
arrange(codepays,pays,date) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux)) %>%
dplyr::slice(2)
# 2 pays avec les pires taux de croissance hier
covid %>%
arrange(pays,date) %>%
filter(!is.na(codepays)) %>%
group_by(pays) %>%
mutate(cumul=cumsum(deaths)) %>%
select(codepays,pays,date,cumul,deaths) %>%
mutate(taux=deaths/cumul*100) %>%
arrange(codepays,pays,date) %>%
filter(date==max(date)) %>%
ungroup() %>%
arrange(desc(taux)) %>%
dplyr::slice(1:2)
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Don't forget to close the application first!
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
